snippet controller 
(function() {
	"use strict";

	angular
		.module("app")
		.controller("$1", $1);

	/* @ngInject */
	function $1($2) {
		var vm = this;

		// Properties
		$3

		// Methods
		$4

		activate();

		function activate() {
			$5
		}$6
	}
}());
endsnippet

snippet config
(function() {
	"use strict";

	angular
		.module("app")
		.config($1);

	/* @ngInject */
	function $1($stateProvider) {
		$stateProvider
			.state("$2", {
				controller: "$3",
				controllerAs: "vm",
				url: "$4",
				templateUrl: "../app/view/$5/$5.html",
				resolve: {
					$6
				}
			});
	}
}());
endsnippet

snippet service
(function() {
	"use strict";

	angular
		.module("app")
		.factory("$1", $1);

	/* @ngInject */
	function $1($http) {
		return {
			$2: $2
		};

		function $2() {
			$3
		}
	}
}());
endsnippet

snippet speccontroller
describe("$1", function() {
	"use strict";

	var controller, $rootScope;

	beforeEach(module("app"));
	beforeEach(inject(function(_$controller_, _$rootScope_) {
		$rootScope = _$rootScope_;
		controller = _$controller_("$1", {

		});
	}));

	it("should create the controller", function() {
		expect(controller).toBeDefined();
	});

	it("$2", function() {
		$3
	});
});
endsnippet

snippet specservice
describe("$1", function() {
	"use strict";

	var service;

	beforeEach(module("app"));
	beforeEach(inject(function($injector) {
		service = $injector.get("$1");
	}));

	it("should create the service", function() {
		expect(service).toBeDefined();
	});
});
endsnippet

snippet it
it("$1", function() {
	$2
});
endsnippet

snippet cls
(function() {
  "use strict";

	$1
}());
endsnippet

snippet specconfig
describe("$1 Config", function() {
  "use strict";

  var $state, $rootScope, $2;

  beforeEach(module("app"));
  beforeEach(module(function($provide) {
    $2 = jasmine.createSpyObj("$2", ["$3"]);

    $provide.value("$2", $2);
  }));

  beforeEach(inject(function(_$state_, _$rootScope_) {
    $state = _$state_;
    $rootScope = _$rootScope_;
  }));

  it("should resolve the state", function() {
    $state.go("$4");
    $rootScope.$digest();

    expect($2.$3).toHaveBeenCalled();
  });
});
endsnippet
